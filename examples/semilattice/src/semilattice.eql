// semilattice.eqlog

// The carrier set.
type El;
// The less-equal relation.
pred le (El, El);

// The less-equal relation is reflexive.
rule reflexivity {
    if x: El; 
    then le(x, x);
}
// The less-equal relation is transitive.
rule transitivity {
    if le(x, y);
    if le(y, z);
    then le(x, z);
}
// The less-equal relation is antisymmetric.
rule antisymmetry {
    if le(x, y);
    if le(y, x);
    then x = y;
}

// A function assigning binary meets, i.e. binary greatest lower bound.
func meet(El, El) -> El;

// The meet function is total, i.e. defined for all elements x, y.
rule totality {
    if x: El;
    if y: El;
    then meet(x, y)!;
}
// The meet is a lower bound.
rule lower_bound {
    if m = meet(x, y);
    then le(m, x);
    then le(m, y);
}
// The meet is the greatest lower bound.
rule greatest_lower_bound {
    if le(z, x);
    if le(z, y);
    if m = meet(x, y);
    then le(z, m);
}
